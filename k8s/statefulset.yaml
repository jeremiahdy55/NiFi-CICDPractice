apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
spec:
  serviceName: nifi
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    spec:
      imagePullSecrets:
        - name: dockerhub-secret
    metadata:
      labels:
        app: nifi
    spec:
      initContainers:
        - name: init-nifi-conf
          image: ${FULL_TAG}
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - |
              echo "Listing /opt/nifi"
              ls -la /opt/nifi
              echo "Listing /opt/nifi/conf-default"
              ls -la /opt/nifi/conf-default
              echo "Listing /opt/nifi/conf"
              ls -la /opt/nifi/conf
              # Populate PVC first
              cp -a /opt/nifi/conf-default/. /opt/nifi/conf/
              ls -la /opt/nifi/conf
              # Modify the config file in place inside the PVC volume mount
              sed -i \
                -e 's@^#\?nifi.web.http.host=.*@nifi.web.http.host=0.0.0.0@' \
                -e 's@^#\?nifi.web.http.port=.*@nifi.web.http.port=8080@' \
                -e 's@^#\?nifi.web.http.network.interface.default=.*@nifi.web.http.network.interface.default=@' \
                -e 's@^nifi.web.https.host=.*@# &@' \
                -e 's@^nifi.web.https.port=.*@# &@' \
                -e 's@^nifi.security\..*@# &@' \
                -e 's@^#\?nifi.remote.input.host=.*@nifi.remote.input.host=@' \
                -e 's@^#\?nifi.remote.input.secure=.*@nifi.remote.input.secure=false@' \
                -e 's@^#\?nifi.remote.input.socket.port=.*@nifi.remote.input.socket.port=@' \
                -e 's@^#\?nifi.remote.input.http.enabled=.*@nifi.remote.input.http.enabled=true@' \
                -e 's@^#\?nifi.remote.input.http.transaction.ttl=.*@nifi.remote.input.http.transaction.ttl=30 sec@' \
                -e 's@^#\?nifi.remote.contents.cache.expiration=.*@nifi.remote.contents.cache.expiration=30 secs@' \
                /opt/nifi/conf/nifi.properties
              
              # modify permissions so that the user:{nifi} owns the newly edited /opt/nifi/conf folder
              chown -R nifi:nifi /opt/nifi/conf
          volumeMounts:
            - name: nifi-storage
              mountPath: /opt/nifi/conf
      containers:
      - name: nifi
        image: ${FULL_TAG}
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nifi-storage
          mountPath: /opt/nifi/conf
  volumeClaimTemplates:
  - metadata:
      name: nifi-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: nifi-ebs
      resources:
        requests:
          storage: 10Gi
